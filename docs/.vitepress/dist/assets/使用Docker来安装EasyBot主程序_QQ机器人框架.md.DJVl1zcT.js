import{_ as s,c as a,o as e,a2 as n}from"./chunks/framework.C94oF1kp.js";const p="/assets/%E4%BD%BF%E7%94%A8Docker%E6%9D%A5%E5%AE%89%E8%A3%85EasyBot%E4%B8%BB%E7%A8%8B%E5%BA%8F_QQ%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%A1%86%E6%9E%B6_001.BFgE5n1-.png",o="/assets/%E4%BD%BF%E7%94%A8Docker%E6%9D%A5%E5%AE%89%E8%A3%85EasyBot%E4%B8%BB%E7%A8%8B%E5%BA%8F_QQ%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%A1%86%E6%9E%B6_002.BK7JvSm0.png",t="/assets/%E4%BD%BF%E7%94%A8Docker%E6%9D%A5%E5%AE%89%E8%A3%85EasyBot%E4%B8%BB%E7%A8%8B%E5%BA%8F_QQ%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%A1%86%E6%9E%B6_003.CxZG7Byn.png",v=JSON.parse('{"title":"使用Docker来安装EasyBot主程序+QQ机器人框架","description":null,"frontmatter":{"title":"使用Docker来安装EasyBot主程序+QQ机器人框架","description":null,"published":true,"date":"2024-08-18T06:54:36.360Z","tags":null,"editor":"markdown","dateCreated":"2024-08-18T06:40:00.004Z"},"headers":[],"relativePath":"使用Docker来安装EasyBot主程序+QQ机器人框架.md","filePath":"使用Docker来安装EasyBot主程序+QQ机器人框架.md"}'),c={name:"使用Docker来安装EasyBot主程序+QQ机器人框架.md"},i=n(`<h1 id="使用docker来安装easybot主程序-qq机器人框架" tabindex="-1">使用Docker来安装EasyBot主程序+QQ机器人框架 <a class="header-anchor" href="#使用docker来安装easybot主程序-qq机器人框架" aria-label="Permalink to &quot;使用Docker来安装EasyBot主程序+QQ机器人框架&quot;">​</a></h1><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>在此需要感谢“倒霉蛋花花”大佬为我们提供的docker镜像</p></div><blockquote><p>注意，此教程仅适用于Linux上的docker 如需在windows上使用docker请根据此教程的部分地方来进行改变 此教程不推荐小白上手,如需上手，请确保您有一定的Linux基础</p></blockquote><h3 id="_1-我们将使用需要一键安装docker并更换源仓库进行加速" tabindex="-1">1.我们将使用需要一键安装docker并更换源仓库进行加速 <a class="header-anchor" href="#_1-我们将使用需要一键安装docker并更换源仓库进行加速" aria-label="Permalink to &quot;1.我们将使用需要一键安装docker并更换源仓库进行加速&quot;">​</a></h3><p>●支持 Debian / Ubuntu / RHEL / CentOS / Fedora 等</p><p>●支持上述基于 Debian 与 Redhat 系的发行版和及其部分衍生版本，支持拥有相同底层核心的其它发行版</p><p>使用此脚本请切换至root用户执行</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>bash &lt;(curl -sSL https://cdn.jsdelivr.net/gh/SuperManito/LinuxMirrors@main/DockerInstallation.sh)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>bash &lt;(curl -sSL https://raw.githubusercontent.com/yangyzp/wikicc_collection/master/DockerInstallation.sh)</span></span></code></pre></div><div class="warning custom-block github-alert"><p class="custom-block-title">WARNING</p><p>两行脚本请选择任意一个使用如果不行再使用另一个,不得一起使用</p></div><p><strong>常见问题与解决方法：</strong></p><p>●如果提示 则说明当前未安装 软件包</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo yum install -y curl || sudo apt-get install -y curl</span></span></code></pre></div><h3 id="_2-docker-compose-安装" tabindex="-1">2. Docker Compose 安装 <a class="header-anchor" href="#_2-docker-compose-安装" aria-label="Permalink to &quot;2. Docker Compose 安装&quot;">​</a></h3><h3 id="方式一-直接下载安装" tabindex="-1">方式一：直接下载安装 <a class="header-anchor" href="#方式一-直接下载安装" aria-label="Permalink to &quot;方式一：直接下载安装&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>curl -L https://get.daocloud.io/docker/compose/releases/download/1.24.0/docker-compose-\`uname -s\`-\`uname -m\` &gt; /usr/local/bin/docker-compose</span></span>
<span class="line"><span>chmod +x /usr/local/bin/docker-compose</span></span>
<span class="line"><span>docker-compose --version</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo curl -L &quot;https://github.com/docker/compose/releases/download/v2.2.2/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span></span></code></pre></div><p>注意，请根据您的服务器所处地区来选择使用哪一个安装脚本</p><h3 id="方式二-使用-python-pip-安装" tabindex="-1">方式二：使用 Python-pip 安装 <a class="header-anchor" href="#方式二-使用-python-pip-安装" aria-label="Permalink to &quot;方式二：使用 Python-pip 安装&quot;">​</a></h3><h5 id="首先-安装-python-pip" tabindex="-1">首先，安装 <code>python-pip</code>： <a class="header-anchor" href="#首先-安装-python-pip" aria-label="Permalink to &quot;首先，安装 \`python-pip\`：&quot;">​</a></h5><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>yum -y install epel-release</span></span>
<span class="line"><span>yum -y install python-pip</span></span></code></pre></div><h5 id="然后-安装-docker-compose" tabindex="-1">然后，安装 <code>docker-compose</code>： <a class="header-anchor" href="#然后-安装-docker-compose" aria-label="Permalink to &quot;然后，安装 \`docker-compose\`：&quot;">​</a></h5><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pip install docker-compose</span></span>
<span class="line"><span>docker-compose version</span></span></code></pre></div><h3 id="_3-接下来使用docker-compose文件来部署easybot" tabindex="-1">3.接下来使用docker-compose文件来部署EasyBot <a class="header-anchor" href="#_3-接下来使用docker-compose文件来部署easybot" aria-label="Permalink to &quot;3.接下来使用docker-compose文件来部署EasyBot&quot;">​</a></h3><p>请注意这个镜像包含着QQ机器人框架所以你无需另外安装</p><p>1.新建目录存放配置文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mkdir /opt/EasyBot</span></span>
<span class="line"><span>cd /opt/EasyBot</span></span></code></pre></div><p>2.请使用文件编辑器,新建一个名为docker-compose.yml纯文本文件,并填入下列信息</p><p>必须按需修改</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>version: &#39;3&#39;</span></span>
<span class="line"><span>services:</span></span>
<span class="line"><span>  easybot:</span></span>
<span class="line"><span>    image: xrcuor/easybot:napcat</span></span>
<span class="line"><span>    container_name: easybot</span></span>
<span class="line"><span>    environment:</span></span>
<span class="line"><span>      - ACCOUNT=123456 # 机器人qq</span></span>
<span class="line"><span>      - WS_ENABLE=true # 正向 WS</span></span>
<span class="line"><span>      - TOKEN=1234 # access_token，可以为空</span></span>
<span class="line"><span>      - WEBUI_TOKEN=wscc # 登录密钥，默认是自动生成的随机登录密码</span></span>
<span class="line"><span>      - WEB_HOST=http://0.0.0.0:5000</span></span>
<span class="line"><span>    restart: always</span></span>
<span class="line"><span>    volumes:</span></span>
<span class="line"><span>      - ./napcat/config:/app/napcat/config</span></span>
<span class="line"><span>      - ./ntqq/qq:/root/.config/QQ</span></span>
<span class="line"><span>      - ./EasyBot:/data</span></span>
<span class="line"><span>    ports:</span></span>
<span class="line"><span>      - &quot;6099:6099&quot;</span></span>
<span class="line"><span>      - &quot;5000:5000&quot;</span></span>
<span class="line"><span>      - &quot;5001:5001&quot;</span></span></code></pre></div><h3 id="_4-部署容器" tabindex="-1">4.部署容器 <a class="header-anchor" href="#_4-部署容器" aria-label="Permalink to &quot;4.部署容器&quot;">​</a></h3><p>确保你是在 /opt/EasyBot 目录中并且 docker-compose.yml 已经填入步骤三中的内容和保存</p><p>使用以下命令进行部署</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker-compose up</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker-compose up -d</span></span></code></pre></div><div class="warning custom-block github-alert"><p class="custom-block-title">WARNING</p><p>请根据您的需求来选择使用哪一条命令,不能同时使用</p><p>注意，如果你想直接在控制台上扫码登录QQ，请使用前台部署</p><p>因为在返回的日志中会有QQ的扫码登录,如果无法扫码请看下一步</p></div><p>如果你在使用前台部署发现出现错误，请加入QQ群反馈</p><h3 id="_5-通过网页登录qq" tabindex="-1">5.通过网页登录QQ <a class="header-anchor" href="#_5-通过网页登录qq" aria-label="Permalink to &quot;5.通过网页登录QQ&quot;">​</a></h3><p>1.确保你的服务器地址</p><div class="warning custom-block github-alert"><p class="custom-block-title">WARNING</p><p>如果你是本机部署的话请访问127.0.0.1:6099/webui/ 如果你和服务器处于同一个内网,请访问:服务器内网ip:6099/webui/ 如果你的服务器位于公网，且你们不在同一个内网，请使用:服务器公网ip:6099/webui/</p></div><p>2.接下来您将会来到一个输入密码界面</p><p>如果你没有改动过 docker-compose.yml 文件中的登陆密钥</p><blockquote class="is-info"><p>默认登录密码为wscc</p></blockquote><p>如您改改动过</p><p><code>请前往这个文件 /opt/EasyBot/napcat/config/webui.json</code></p><p>在其中找到token,这个 token就是你的登陆密钥</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>  &quot;host&quot;: &quot;0.0.0.0&quot;, // WebUI 监听地址</span></span>
<span class="line"><span>  &quot;port&quot;: 6099, // WebUI 端口</span></span>
<span class="line"><span>  &quot;prefix&quot;: &quot;&quot;, // WebUI 工作前缀，此项功能将在进阶配置中解释</span></span>
<span class="line"><span>  &quot;token&quot;: &quot;xxxx&quot;, //登录密钥，默认是自动生成的随机登录密码</span></span>
<span class="line"><span>  &quot;loginRate&quot;: 3, //每分钟登录次数限制</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>3.登录进去后请使用手机扫码并完成登录,成功之后您将会来到一个配置页面</p><p><img src="`+p+'" alt="">请确保启动了ws正向请求</p><p>并且新信息的上报模式为消息段</p><h3 id="_6-登录easybot" tabindex="-1">6.登录EasyBot <a class="header-anchor" href="#_6-登录easybot" aria-label="Permalink to &quot;6.登录EasyBot&quot;">​</a></h3><div class="warning custom-block github-alert"><p class="custom-block-title">WARNING</p><p>如果你是本机部署的话请访问127.0.0.1:5000 如果你和服务器处于同一个内网,请访问:服务器内网ip:5000 如果你的服务器位于公网，且你们不在同一个内网，请使用:服务器公网ip:5000</p></div><p><img src="'+o+'" alt="">请选择侧边栏的机器人管理的2级菜单中的适配器管理,并选择连接设置</p><p><img src="'+t+'" alt="">确保正确ws连接端口是正确和连接密钥</p><p>如果您不知道要到哪，请打开我们在第五步是使用网页登录QQ的那个网页</p><p>关于配置的都写在里面了</p><p>配置完成之后请点击上方的链接</p><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>如连接成功了就已经代表大公告成</p></div><p>如果需要更多设置，请查看其他文章</p>',59),l=[i];function d(r,h,u,b,k,m){return e(),a("div",null,l)}const E=s(c,[["render",d]]);export{v as __pageData,E as default};
